name: Deploy Angular App to S3 with Terraform

on:
  push:
    branches:
      - ftr-aws-cloudfront-deploy

jobs:
  deploy:
    name: Terraform + Upload App
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install Node (for Angular build)
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Angular deps
        run: npm ci

      - name: Build Angular App
        run: npm run build -- --configuration=production

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        working-directory: ./infra
        run: terraform init

      - name: Terraform Plan
        working-directory: ./infra
        run: terraform plan -var "bucket_name=${{ secrets.S3_BUCKET_NAME }}"

      - name: Get Terraform Outputs
        id: tf_outputs
        working-directory: ./infra
        run: |
          echo "bucket_name=$(terraform output -raw bucket_name)" >> $GITHUB_OUTPUT
          echo "distribution_id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT

      - name: Upload app to S3
        run: |
          aws s3 sync dist/front_spotistats s3://${{ steps.tf_outputs.outputs.bucket_name }} --delete

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ steps.tf_outputs.outputs.distribution_id }} \
            --paths "/*"
